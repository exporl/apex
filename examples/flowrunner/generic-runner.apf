<!-- @doc
     @what: Comprehensive example HTML file for a generic flow runner
     @description: The flow runner allows to chain multiple experiments together. When first started this HTML page will be shown, and after the experiment the user will be returned to this page.
     @how:
     * The object main_experiment contains all experiment data.
     * The function setMainParameters can be used for parameters of the main experiment that rely on form input (e.g. subject name in description).
     * The function setExperimentParameters can be used for generic experiment data (e.g. a result-file that depends on form input, or to select a random experiment from a predefined list).

     * An experiment object may contain:
     - title
     - description
     - form: object to show a form in the beginning of an experiment (only for main_experiment)
     - params: object with general parameters. Form input will also be loaded in this object
     - parents (set automatically!): array with titles of parent-experiments
     - ID (set automatically!): unique identifier based on title and titles of parents 
     - path (set automatically): explicit reference to the object (e.g. main_experiment.experiments[1].experiments[0]) 
     - blind: boolean to hide experiment titles (only for the "deepest level" of experiments, i.e. experiments with file defined)

     If it is contains sub-experiments:
     - experiments: array of sub-experiments (i.e. experiment objects)
     - randomized: boolean to randomize order of sub-experiments

     If it refers to a single APEX-experiment (i.e. "deepest level" of experiments)
     - file: path of the experiment file
     - expressions: can be used to set parameters in .apx-file
     - resultfile: path where the result-file will be saved (if not set, APEX will ask where to save the results after the experiment)

     If a certain parameter is not set explicitly for an experiment, it will be inherited from its parent.
  -->
<html>
  <head>
    <title>Generic flow runner</title>

    <!-- fix initial scaling -->
    <script src="external/jquery-1.11.1.min.js"></script>
    <script src="external/jquery.mobile-1.4.5.min.js"></script>
    <meta name="viewport" content="width=device-width">

    <!-- (optional) stylesheet with modern UI/Apex look -->
    <link rel="stylesheet" href="external/themes/apex-theme.min.css" />
    <link rel="stylesheet" href="external/themes/jquery.mobile.icons.min.css" />
    <link rel="stylesheet" href="external/themes/jquery.mobile.structure-1.4.5.min.css" />

    <!-- (necessary) communication with Apex -->
    <script src="js/polyfill.js" type="text/javascript"> </script>
    <script src="js/commonwebsocket.js" type="text/javascript"> </script>
    <script src="js/flowapi.js" type="text/javascript"> </script>
    <script src="external/jquery-1.11.1.min.js"></script>

    <script type="text/JavaScript">
      var main_experiment = {
          title : "Generic flow runner",
          experiments : [
              {   title : "calibration",
                  file : '../calibration/calibration.apx',
              },
              {   title : "Some procedures",
                  experiments : [
                      { title : "Simple", file : '../procedure/simple.apx', description: 'A simple experiment' } ,
                      { title : "Extra simple" , file : '../procedure/extrasimple.apx' , description: 'An even simpler experiment' }
                  ],
                  randomized : true
              },
              {   title : "A random, blind experiment",
                  description : "If you click <i>redo</i> after the experiment is done, a new random experiment will be selected. A blind experiment will not appear in the list of finished experiments.",
                  experiments : [
                      { type : "parameters" , blind : true }
                  ],
                  randomized : true
              }
          ] ,
          randomized : false,
          blind : false ,
          form : [
              { tag_name : "input" , id : "subject", type : "text", placeholder: "Name subject" },
              { tag_name : "select" , id: "retest", content : [
                  { tag_name : "option" , content : "test" , value : "false" } ,
                  { tag_name : "option" , content : "retest" , value : "true" }
              ]
              },
              { tag_name : "select" , id: "save_results", content : [
                  { tag_name : "option" , content : "Save results?" , value : "false" , disabled : "true" , selected : "true" } ,
                  { tag_name : "option" , content : "YES" , value : "true" } ,
                  { tag_name : "option" , content : "NO" , value : "false" }
              ]
              }
          ] ,
          params : {}
      };

      function setMainParameters(experiment) {
          experiment.description = 'Hi, ' + experiment.params.subject + '. This is a generic flow-runner.';
      }

      function setExperimentParameters(experiment) {
          // only save results is this is set in the form
          if ( experiment.params.save_results === 'true' )
              experiment.resultfile = experiment.params.subject + ( ( experiment.params.retest==="true" ) ? "_retest" : "") + '.apr';

          // choose random "parameters" experiment for experiments of type "parameters"
          if ( experiment.type === 'parameters' ) {
              var options = ["connection-filter","connection-soundcard","device-allchannels","restore","spinbox"];
              var optionID = randInt(0,options.length-1);
              experiment.title = options[optionID];
              experiment.file = '../parameters/parameters-' + options[optionID] + '.apx';
          }
      }

      function randInt(min,max) {
          return  Math.floor((Math.random() * (max-min+1)) + min); ;
      }

      function apicheck() {
          if (typeof api !== "undefined")
              api.onReady(init);
          else
              setTimeout(apicheck, 100);
      }

      $(document).ready(function(){
          setTimeout(apicheck,100);
      });

      /* Called when api is initialized and ready */
      function init() {
          api.loadScript("./generic-runner.js").then(function() {
              loadMain(1);
          });
      }

      </script>
    <style type="text/css">
      html,body {
          font-family: Arial, Helvetica, sans-serif;
      }
      #parameters-form {
          width: 500px;
          height: 500px;
          margin: auto;
          margin-top: 250px;
          position: relative;
          top: 50%;
      }
      #parameters-form * {
          width: 100%;
          height: 50px;
      }
    </style>
  </head>
  <body>
    <form id="parameters-form"></form>
    <div id="experiment-div"></div>
    <div id="results-div">
    </div>
  </body>
</html>
