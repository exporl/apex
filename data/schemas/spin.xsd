<?xml version="1.0" encoding="UTF-8"?>

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xml:lang="en-US"
    targetNamespace="http://med.kuleuven.be/exporl/apex/4.0.1/experiment"
    xmlns:apex="http://med.kuleuven.be/exporl/apex/4.0.1/experiment">

    <xs:include schemaLocation="prefix.xsd"/>
    <xs:include schemaLocation="screens.xsd"/>

    <xs:element name="speechmaterialfile">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="noises" type="apex:noisesType"/>
                <xs:element name="speechmaterial" type="apex:speechmaterialType"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="spin">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="prefix" type="apex:prefixType">
                    <xs:annotation>
                        <xs:documentation>
                            This prefix will be used for all speechmaterials and noises. All files specified in the remainder of this file, are relative to this prefix.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="noises" type="apex:noisesType"/>
                <xs:element name="speechmaterial_files" type="apex:speechmaterialFilesType"/>
                <xs:element name="speaker_setup" type="apex:speakerSetupType"/>
                <xs:element name="soundcard_setup" type="apex:soundcardSetupType" minOccurs="0"/>
                <xs:element name="general_setup" type="apex:generalSetupType"/>
                <xs:element name="id_setup" type="apex:idSetupType">
                    <xs:annotation>
                        <xs:documentation>
                            Setup id's that will be used in the experiment that will be generated.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="subject_screen" type="apex:spinScreenType">
                    <xs:annotation>
                        <xs:documentation>
                            APEX Screen to be used when the subject sits in front of the monitor.
                            Typically this screen contains a text box (for an open set speech material) or a set of buttons (for a closed set speech material)
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="experimenter_screen_quiet" type="apex:spinScreenType">
                    <xs:annotation>
                        <xs:documentation>
                            APEX screen to be shown when the experimenter sits in front of the screen, for speech in quiet.
                            Typically this screen contains "correct" and "false" buttons and the speech token that is currently being presented.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="experimenter_screen_noise" type="apex:spinScreenType">
                    <xs:annotation>
                        <xs:documentation>
                            APEX screen to be shown when the experimenter sits in front of the screen, for speech in noise.
                            Typically this screen contains "correct" and "false" buttons and the speech token that is currently being presented.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="custom_screens" minOccurs="0">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="screen" type="apex:screenType" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>
                                        Screen as will occur in the generated experiment file.        
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="generalSetupType">
        <xs:sequence>
            <xs:element name="internal_rms" type="xs:double">
                <xs:annotation>
                    <xs:documentation>
                        Before setting the SNR, speech and noise signals are internally set to this value in dBFS.
                        If no noise is presented and calibration is set to 0dB, this is the amplitude that will be sent to the soundcard.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="default_calibration" type="xs:double">
                <xs:annotation>
                    <xs:documentation>
                        Default target amplitude for calibration. If calibration is set to 0, a value of internal_rms dBFS
                        will correspond to default_calibration dB SPL/A
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="xslt_script" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="soundcardSetupType">
        <xs:sequence>
            <xs:element name="driver" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        If specified, this sound driver will be used
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="buffersize" type="xs:positiveInteger" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        If specified, this buffersize will be used
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="blocksize" type="xs:positiveInteger" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        If specified, this blocksize will be used
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="spinScreenType">
        <xs:sequence>
            <xs:element name="screen" type="apex:screenType">
                <xs:annotation>
                    <xs:documentation>
                        Screen as will occur in the generated experiment file.        
                    </xs:documentation>
                </xs:annotation>

            </xs:element>
        </xs:sequence>
    </xs:complexType>


    <xs:complexType name="idSetupType">
        <xs:sequence>
            <xs:element name="gain" type="xs:ID">
                <xs:annotation>
                    <xs:documentation>
                        ID of the gain parameter that contains the snr value
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="speechtokenText" type="xs:ID">
                <xs:annotation>
                    <xs:documentation>
                        ID of the fixed parameter that contains the text of the stimulus (speech token)
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="nSpeechtokenParts" type="xs:ID">
                <xs:annotation>
                    <xs:documentation>
                        ID of the fixed parameter that contains the number of speech token parts (e.g., words, phonemes, ...)
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="speechtokenPart1" type="xs:ID">
                <xs:annotation>
                    <xs:documentation>
                        ID of the fixed parameter that contains the text of the stimulus (speech token)
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="speechtokenPart2" type="xs:ID">
                <xs:annotation>
                    <xs:documentation>
                        ID of the fixed parameter that contains the text of the stimulus (speech token)
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="speechtokenPart3" type="xs:ID">
                <xs:annotation>
                    <xs:documentation>
                        ID of the fixed parameter that contains the text of the stimulus (speech token)
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="speechtokenPart4" type="xs:ID">
                <xs:annotation>
                    <xs:documentation>
                        ID of the fixed parameter that contains the text of the stimulus (speech token)
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="speechtokenPart5" type="xs:ID">
                <xs:annotation>
                    <xs:documentation>
                        ID of the fixed parameter that contains the text of the stimulus (speech token)
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="speechtokenPart6" type="xs:ID">
                <xs:annotation>
                    <xs:documentation>
                        ID of the fixed parameter that contains the text of the stimulus (speech token)
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="speechtokenPart7" type="xs:ID">
                <xs:annotation>
                    <xs:documentation>
                        ID of the fixed parameter that contains the text of the stimulus (speech token)
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="speechtokenPart8" type="xs:ID">
                <xs:annotation>
                    <xs:documentation>
                        ID of the fixed parameter that contains the text of the stimulus (speech token)
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="speechtokenPart9" type="xs:ID">
                <xs:annotation>
                    <xs:documentation>
                        ID of the fixed parameter that contains the text of the stimulus (speech token)
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="speechmaterialFilesType">
        <xs:sequence>
            <xs:element name="speechmaterial_file" minOccurs="1" maxOccurs="unbounded"
                type="apex:speechmaterialFileType"> </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="speechmaterialListType">
        <xs:sequence>
            <xs:element name="speechtoken" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="file" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Location of wav file associated with this token. Relative to prefix above</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="text">
                            <xs:complexType mixed="true">
                                <xs:choice maxOccurs="unbounded" minOccurs="0">
                                    <xs:element name="key" type="xs:string" minOccurs="0"
                                        maxOccurs="unbounded">
                                        <xs:annotation>
                                            <xs:documentation>Keyword, to be used by the
                                                        corrector</xs:documentation>
                                        </xs:annotation>
                                    </xs:element>
                                    <xs:element name="skey" type="xs:string" minOccurs="0"
                                        maxOccurs="unbounded">
                                        <xs:annotation>
                                            <xs:documentation>Part of a split keyword, to be used by the
                                                        corrector.</xs:documentation>
                                        </xs:annotation>
                                    </xs:element>
                                    <xs:element name="b" type="xs:string" minOccurs="0"
                                        maxOccurs="unbounded">
                                        <xs:annotation>
                                            <xs:documentation>Bold</xs:documentation>
                                        </xs:annotation>
                                    </xs:element>
                                    <xs:element name="u" type="xs:string" minOccurs="0"
                                        maxOccurs="unbounded">
                                        <xs:annotation>
                                            <xs:documentation>Underline</xs:documentation>
                                        </xs:annotation>
                                    </xs:element>
                                    <xs:element name="i" type="xs:string" minOccurs="0"
                                        maxOccurs="unbounded">
                                        <xs:annotation>
                                            <xs:documentation>Italic</xs:documentation>
                                        </xs:annotation>
                                    </xs:element>
                                </xs:choice>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="id" type="xs:string"/>
                </xs:complexType>
            </xs:element>

        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="speakerSetupType">
        <xs:sequence>
            <xs:element name="speaker" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="angle" type="xs:nonNegativeInteger">
                            <xs:annotation>
                                <xs:documentation>
                                    Angular location of speaker (in degrees). 0 degr is straight ahead, 90 degr is on the right hand side of the s ubject.        
                                </xs:documentation>
                            </xs:annotation>

                        </xs:element>
                        <xs:element name="channel" type="xs:nonNegativeInteger">
                            <xs:annotation>
                                <xs:documentation>
                                    Channel of the sound card to which the speaker at the angle above is connected (0-based).
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="speechmaterialType">
        <xs:sequence>
            <xs:element name="rms" type="xs:double">
                <xs:annotation>
                    <xs:documentation>
                                    RMS energy of the signal on disk in dBFS
                                </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="type" minOccurs="0" default="openset">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="openset">
                            <xs:annotation>
                                <xs:documentation>Open set speech material</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="child">
                            <xs:annotation>
                                <xs:documentation>Speech material for children, e.g., Göttinger</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="matrix">
                            <xs:annotation>
                                <xs:documentation>Matrix test: the user has to click together a sentence based on components shown on screen</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="values_for_mean" type="xs:positiveInteger" minOccurs="0" default="6">
                <xs:annotation>
                    <xs:documentation>
                                    Number of trials to use for calculating the mean when processing results
                                </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:choice>
                <xs:element name="list" type="apex:speechmaterialListType" minOccurs="1"
                    maxOccurs="unbounded"/>
                <xs:element name="category" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="rms" type="xs:double" minOccurs="0">
                                <xs:annotation>
                                    <xs:documentation>
                                                RMS energy of the signal on disk in dBFS
                                            </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="list" type="apex:speechmaterialListType" minOccurs="1"
                                maxOccurs="unbounded"/>
                        </xs:sequence>
                        <xs:attribute name="id" type="xs:Name"/>
                    </xs:complexType>
                </xs:element>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID"/>
    </xs:complexType>
    <xs:complexType name="speechmaterialFileType">
        <xs:attribute name="href" type="xs:anyURI"/>
        <xs:attribute name="mode">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="wildcard"/>
                    <xs:enumeration value="name"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="noisesType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="1" name="noise">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="description" type="xs:string"/>
                        <xs:element minOccurs="0" name="name" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>
                                    Name is the string that is shown in the drop down box to select the speech material. 
                                    If name is not specified here, the ID will be used as the name
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="file" type="xs:string"/>
                        <xs:element name="rms" type="xs:double">
                            <xs:annotation>
                                <xs:documentation>
                                    RMS energy of the signal on disk in dBFS
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element maxOccurs="1" minOccurs="0" name="speechmaterial">
                            <xs:complexType>
                                <xs:annotation>
                                    <xs:documentation>
                                        If a noise is specific to a speech material, the speech material can be specified here
                                    </xs:documentation>
                                </xs:annotation>
                                <xs:simpleContent>
                                    <xs:extension base="xs:IDREF">
                                        <!--xs:attribute name="id" use="required" type="xs:IDREF"/-->
                                        <xs:attribute name="category" type="xs:Name" use="optional"
                                        />
                                    </xs:extension>
                                </xs:simpleContent>


                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="id" type="xs:ID" use="required"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
